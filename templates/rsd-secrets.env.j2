# SPDX-FileCopyrightText: 2022 Helmholtz Centre for Environmental Research (UFZ)
# SPDX-FileCopyrightText: 2022 Helmholtz-Zentrum Dresden-Rossendorf (HZDR)
#
# SPDX-License-Identifier: Apache-2.0

# example env file
# copy to .env and /frontend/env.local

# .env.local is consumed by frontent (Next)
# see https://nextjs.org/docs/basic-features/environment-variables

# .env is consumed by docker-compose.yml
# currently assigned values are for .env
# env.local values, if they differ, are placed as a comment above the env variable

# You also need to obtain/generate missing secrets

# ---- PUBLIC ENV VARIABLES -------------

# postgresql
# cosumed by services: database
POSTGRES_DB=rsd-db
POSTGRES_USER=rsd

# backend (postgREST)
# cosumed by services: backend
PGRST_DB_ANON_ROLE=web_anon
PGRST_DB_SCHEMA=public
PGRST_SERVER_PORT=3500

# postgREST api
# cosumed by services: authentication,frontend,auth-tests, scrapers
# .env.local: http://localhost/api/v1, .env: http://backend:3500
POSTGREST_URL=http://backend:3500

# RSD Auth module
# cosumed by services: frontend (api/fe)
# .env.local: http://localhost/auth, .env: http://auth:7000
RSD_AUTH_URL=http://auth:7000

# SURFCONEXT - TEST ENVIRONMENT
# cosumed by: authentication, frontend/utils/surfConext
NEXT_PUBLIC_SURFCONEXT_CLIENT_ID=www.research-software.nl
# cosumed by: authentication, frontend/utils/surfConext
NEXT_PUBLIC_SURFCONEXT_REDIRECT=http://localhost/auth/login/surfconext
# cosumed by: frontend/utils/surfConext
NEXT_PUBLIC_SURFCONEXT_WELL_KNOWN_URL=https://connect.test.surfconext.nl/.well-known/openid-configuration

# max requests to the GitHub API per run, runs 10 times per hour
# optional, comment out if not available, a default of 6 will be used
# consumed by: scrapers
MAX_REQUESTS_GITHUB=6


# ---- SECRETS ------ SECRETS -----------

# cosumed by services: database
# generate random/strong password
POSTGRES_PASSWORD={{ rsd_postgres_password }}

# SURFCONEXT
# cosumed by services: authentication
# obtain the secret from SURFCONEXT dashboard
AUTH_SURFCONEXT_CLIENT_SECRET={{ rsd_surfconext_client_secret }}

# POSTGREST JWT SECRET
# cosumed by services: authentication, frontend (auth-node), auth-tests, scrapers
# generate random/strong password with at least 32 characters
PGRST_JWT_SECRET={{ rsd_jwt_secret }}

# consumed by: scrapers
# optional, comment out if not available, should be of the form username:token
# obtain the secret from GITHUB dashboard
API_CREDENTIALS_GITHUB={{ rsd_gh_access_token }}

# consumed by: scrapers
# obtain the secret from ZENODO dashboard
ZENODO_ACCESS_TOKEN={{ rsd_zenodo_access_token }}

# consumed by: scrapers
# Zotero library id and api token
ZOTERO_LIBRARY={{ rsd_zotero_library }}
ZOTERO_API_TOKEN={{ rsd_zotero_api_token }}
